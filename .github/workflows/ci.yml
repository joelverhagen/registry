name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  # Build, Lint, and Validate
  build-lint-validate:
    name: Build, Lint, and Validate
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Run lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
      with:
        version: v2.4.0

    - name: Validate schemas and examples
      run: make validate

    - name: Build application
      run: make build

    - name: Check for vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  # All Tests
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
      with:
        go-version-file: 'go.mod'
        cache: true

    - name: Run all tests
      run: make test-all

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html
